<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-RU-RU.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>SqlClient.CacheCustom - свойство</title><meta name="Language" content="ru-ru" /><meta name="System.Keywords" content="CacheCustom свойство" /><meta name="System.Keywords" content="SqlClient.CacheCustom свойство" /><meta name="Microsoft.Help.F1" content="Nemiro.Data.Sql.SqlClient.CacheCustom" /><meta name="Microsoft.Help.F1" content="Nemiro.Data.Sql.SqlClient.get_CacheCustom" /><meta name="Microsoft.Help.F1" content="Nemiro.Data.Sql.SqlClient.set_CacheCustom" /><meta name="Microsoft.Help.Id" content="P:Nemiro.Data.Sql.SqlClient.CacheCustom" /><meta name="Description" content="Тип пользовательского объекта кэширования. Используется совместно со свойствами и ." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="Nemiro.Data.Sql" /><meta name="file" content="7efcab36-fd8e-8a2d-ccb3-6de92540eb0f" /><meta name="guid" content="7efcab36-fd8e-8a2d-ccb3-6de92540eb0f" /><link type="text/css" rel="stylesheet" href="./../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"><!----></script><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">SqlClient<span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>CacheCustom - свойство</td><td class="OH_tdRunningTitleColumn">Nemiro.Data.dll</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="summary">
            Тип пользовательского объекта кэширования. Используется совместно со свойствами <a href="04eda964-2407-d070-9edc-9177e741c746.htm" target="">CacheType</a> и <a href="52a4a048-12eb-469c-f2e6-b9356a48e9ea.htm" target="">CacheCustomArgs</a>.
            </div><p></p><strong>Пространство имён:</strong> <a href="7d3c05cd-1d1b-04d9-75d2-b3d6ad38a446.htm" target="">Nemiro.Data.Sql</a><br /><strong>Сборка:</strong> <span sdata="assembly">Nemiro.Data</span> (в Nemiro.Data.dll) Версия: 2.11.4.126 (2.11.4.126)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Синтаксис</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EBDEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EBDEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EBDEAAAAA_tabimgleft"></div><div id="ID0EBDEAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EBDEAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EBDEAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EBDEAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EBDEAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EBDEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EBDEAAAAA_tabimgright"></div></div><div id="ID0EBDEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EBDEAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EBDEAAAAA','4')" title="View Colorized" style="display: none">Просмотр с раскраской</a><a id="ID0EBDEAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EBDEAAAAA','4')" title="Скопировать в буфер обмена">Скопировать в буфер обмена</a><a id="ID0EBDEAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EBDEAAAAA','4')" title="Print">Печать</a></div></div><div id="ID0EBDEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="identifier">Type</span> <span class="identifier">CacheCustom</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</pre></div><div id="ID0EBDEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public Type CacheCustom { get; set; }</pre></div><div id="ID0EBDEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">CacheCustom</span> <span class="keyword">As</span> <span class="identifier">Type</span> 
	<span class="keyword">Get</span> 
	<span class="keyword">Set</span></pre></div><div id="ID0EBDEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>Public Property CacheCustom As Type 
	Get 
	Set</pre></div><div id="ID0EBDEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBDEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBDEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBDEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EBDEAAAAA');</script></div><h4 class="subHeading">Значение свойства</h4>Тип: <span class="nolink">Type</span><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Заметки</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>Пользовательский класс, реализующий доступ к кэшу, должен быть наследован от <span class="nolink">ObjectCache</span>.</p><p>Чтобы использовать пользовательский класс для работы с кэшем, свойство <a href="04eda964-2407-d070-9edc-9177e741c746.htm" target="">CacheType</a> должно иметь значение <a href="604772fc-64d5-8d60-f52c-5de753bcbbcb.htm" target="">Custom</a>.</p><p>Как правило, метод кэширования указывается один раз в файле конфигурации, в параметре <span class="code">NeData:Sql:CacheType</span> (для веб-приложений) или в параметре <span class="code">NeDataSqlCacheType</span> (для приложений Windows).</p><div id="ID0EBDAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EBDAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeft" id="ID0EBDAAAAA_tabimgleft"></div><div id="ID0EBDAAAAA_tab1" class="OH_CodeSnippetContainerTabSolo" EnableCopyCode="true"><a xmlns="">XML</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EBDAAAAA_tabimgright"></div></div><div id="ID0EBDAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EBDAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EBDAAAAA','4')" title="View Colorized" style="display: none">Просмотр с раскраской</a><a id="ID0EBDAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EBDAAAAA','4')" title="Скопировать в буфер обмена">Скопировать в буфер обмена</a><a id="ID0EBDAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EBDAAAAA','4')" title="Print">Печать</a></div></div><div id="ID0EBDAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">appSettings</span><span class="highlight-xml-bracket">&gt;</span> 
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">clear</span> <span class="highlight-xml-bracket">/&gt;</span> 
  <span class="highlight-xml-comment">&lt;!--Метод кэширования данных--&gt;</span> 
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">add</span> <span class="highlight-xml-attribute-name">key</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"NeData:Sql:CacheType"</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Custom"</span> <span class="highlight-xml-bracket">/&gt;</span> 
  <span class="highlight-xml-comment">&lt;!--Имя типа пользовательского кэша--&gt;</span> 
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">add</span> <span class="highlight-xml-attribute-name">key</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"NeData:Sql:CacheCustom"</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"MyCache"</span> <span class="highlight-xml-bracket">/&gt;</span> 
  <span class="highlight-xml-comment">&lt;!--Список дополнительных параметров (через запятую), которые будут переданы в конструктор пользовательского кэша--&gt;</span> 
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">add</span> <span class="highlight-xml-attribute-name">key</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"NeData:Sql:CacheCustomArgs"</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1,test,123"</span> <span class="highlight-xml-bracket">/&gt;</span> 
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">appSettings</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0EBDAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>&lt;appSettings&gt; 
  &lt;clear /&gt; 
  &lt;!--Метод кэширования данных--&gt; 
  &lt;add key="NeData:Sql:CacheType" value="Custom" /&gt; 
  &lt;!--Имя типа пользовательского кэша--&gt; 
  &lt;add key="NeData:Sql:CacheCustom" value="MyCache" /&gt; 
  &lt;!--Список дополнительных параметров (через запятую), которые будут переданы в конструктор пользовательского кэша--&gt; 
  &lt;add key="NeData:Sql:CacheCustomArgs" value="1,test,123" /&gt; 
&lt;/appSettings&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EBDAAAAA');</script><p>Работа реализации пользовательских механизмов кэширования на данный момент не проверена и не гарантируется.</p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Примеры</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><p>В следующем примере программно устанавливается пользовательский метод кэширования данных и выполняется запрос к SQL Server методом <a href="256fc8b6-7331-6886-b020-dc47e44ca688.htm" target="">GetTable<span id="ID0EADECAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EADECAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a> с кэшированием результатов на <span class="code">60</span> секунд.</p><div id="ID0EDCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EDCAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EDCAAAAA_tabimgleft"></div><div id="ID0EDCAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDCAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EDCAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDCAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EDCAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EDCAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDCAAAAA_tabimgright"></div></div><div id="ID0EDCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EDCAAAAA','4')" title="View Colorized" style="display: none">Просмотр с раскраской</a><a id="ID0EDCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDCAAAAA','4')" title="Скопировать в буфер обмена">Скопировать в буфер обмена</a><a id="ID0EDCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDCAAAAA','4')" title="Print">Печать</a></div></div><div id="ID0EDCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-keyword">using</span> (SqlClient client = <span class="highlight-keyword">new</span> SqlClient())
{
  <span class="highlight-comment">// кэширование результатов в файлом кэше на 60 секунд</span>
  client.CacheDuration = <span class="highlight-number">60</span>;
  <span class="highlight-comment">// устанавливаем пользовательский тип кэширования</span>
  client.CacheType = CachingType.Custom;
  <span class="highlight-comment">// указываем пользовательский тип кээширования</span>
  client.CacheCustom = <span class="highlight-keyword">typeof</span>(MyCache);
  <span class="highlight-comment">// формирование запроса</span>
  client.CommandText = <span class="highlight-literal">"SELECT * FROM messages"</span>;
  <span class="highlight-comment">// выполнение запроса</span> 
  <span class="highlight-keyword">var</span> table = client.GetTable();
  <span class="highlight-comment">// вывод результатов</span>
  Console.WriteLine(<span class="highlight-literal">"Получено данных: {0}"</span>, table.Rows.Count);
  Console.WriteLine(<span class="highlight-literal">"Время выполнения запроса: {0}"</span>, client.LastQueryTime);
  Console.WriteLine(<span class="highlight-literal">"Результат получен из кэша: {0}"</span>, client.LastQueryResultsFromCache);
}</pre></div><div id="ID0EDCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>using (SqlClient client = new SqlClient())
{
  // кэширование результатов в файлом кэше на 60 секунд
  client.CacheDuration = 60;
  // устанавливаем пользовательский тип кэширования
  client.CacheType = CachingType.Custom;
  // указываем пользовательский тип кээширования
  client.CacheCustom = typeof(MyCache);
  // формирование запроса
  client.CommandText = "SELECT * FROM messages";
  // выполнение запроса 
  var table = client.GetTable();
  // вывод результатов
  Console.WriteLine("Получено данных: {0}", table.Rows.Count);
  Console.WriteLine("Время выполнения запроса: {0}", client.LastQueryTime);
  Console.WriteLine("Результат получен из кэша: {0}", client.LastQueryResultsFromCache);
}</pre></div><div id="ID0EDCAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="highlight-keyword">Using</span> client <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> SqlClient()
  <span class="highlight-comment">' кэширование результатов в файлом кэше на 60 секунд</span>
  client.CacheDuration = <span class="highlight-number">60</span> 
  <span class="highlight-comment">' устанавливаем пользовательский тип кэширования</span>
  client.CacheType = CachingType.Custom
  <span class="highlight-comment">' указываем пользовательский тип кээширования</span>
  client.CacheCustom = <span class="highlight-keyword">GetType</span>(MyCache)
  <span class="highlight-comment">' формирование запроса</span>
  client.CommandText = <span class="highlight-literal">"SELECT * FROM messages"</span> 
  <span class="highlight-comment">' выполнение запроса</span> 
  <span class="highlight-keyword">Dim</span> table <span class="highlight-keyword">As</span> DataTable = client.GetTable()
  <span class="highlight-comment">' вывод результатов</span>
  Console.WriteLine(<span class="highlight-literal">"Получено данных: {0}"</span>, table.Rows.Count)
  Console.WriteLine(<span class="highlight-literal">"Время выполнения запроса: {0}"</span>, client.LastQueryTime)
  Console.WriteLine(<span class="highlight-literal">"Результат получен из кэша: {0}"</span>, client.LastQueryResultsFromCache)
}</pre></div><div id="ID0EDCAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>Using client As New SqlClient()
  ' кэширование результатов в файлом кэше на 60 секунд
  client.CacheDuration = 60 
  ' устанавливаем пользовательский тип кэширования
  client.CacheType = CachingType.Custom
  ' указываем пользовательский тип кээширования
  client.CacheCustom = GetType(MyCache)
  ' формирование запроса
  client.CommandText = "SELECT * FROM messages" 
  ' выполнение запроса 
  Dim table As DataTable = client.GetTable()
  ' вывод результатов
  Console.WriteLine("Получено данных: {0}", table.Rows.Count)
  Console.WriteLine("Время выполнения запроса: {0}", client.LastQueryTime)
  Console.WriteLine("Результат получен из кэша: {0}", client.LastQueryResultsFromCache)
}</pre></div><div id="ID0EDCAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EDCAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EDCAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EDCAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDCAAAAA');</script><p>Ниже показан пример реализации класса пользовательского кэша на C#. Это копия кода класса <a href="2bd6312f-f769-a765-dee0-2597c74458b4.htm" target="">WebCache</a>.</p><div id="ID0EACAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EACAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EACAAAAA_tabimgleft"></div><div id="ID0EACAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EACAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EACAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EACAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EACAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EACAAAAA_tabimgright"></div></div><div id="ID0EACAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EACAAAAA','4')" title="View Colorized" style="display: none">Просмотр с раскраской</a><a id="ID0EACAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EACAAAAA','4')" title="Скопировать в буфер обмена">Скопировать в буфер обмена</a><a id="ID0EACAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EACAAAAA','4')" title="Print">Печать</a></div></div><div id="ID0EACAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Collections.Generic;
<span class="highlight-keyword">using</span> System.Linq;
<span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> System.Runtime.Caching;
<span class="highlight-keyword">using</span> System.Web;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MyCache : ObjectCache
{

  <span class="highlight-keyword">private</span> System.Web.Caching.Cache _Instance = <span class="highlight-keyword">null</span>;

  <span class="highlight-comment">// Политика кэширования по умолчанию.</span> 
  <span class="highlight-keyword">public</span> CacheItemPolicy DefaultPolicy { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

  <span class="highlight-keyword">public</span> WebCache()
  {
    <span class="highlight-keyword">if</span> (HttpContext.Current != <span class="highlight-keyword">null</span>)
    {
      _Instance = HttpContext.Current.Cache;
      <span class="highlight-keyword">this</span>.DefaultPolicy = <span class="highlight-keyword">new</span> CacheItemPolicy();
    }
    <span class="highlight-keyword">else</span>
    {
      <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> Exception(<span class="highlight-literal">"HttpContext is requred."</span>);
    }
  }

  <span class="highlight-keyword">public</span> WebCache(HttpContext context)
  {
    _Instance = context.Cache;
    <span class="highlight-keyword">this</span>.DefaultPolicy = <span class="highlight-keyword">new</span> CacheItemPolicy();
  }

  <span class="highlight-comment">// Вставляет запись в кэш, используя указанную пару "ключ-значение" и заданные сведения о методе ее удаления.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">object</span> AddOrGetExisting(<span class="highlight-keyword">string</span> key, <span class="highlight-keyword">object</span> <span class="highlight-keyword">value</span>, CacheItemPolicy policy, <span class="highlight-keyword">string</span> regionName = <span class="highlight-keyword">null</span>)
  {
    <span class="highlight-keyword">object</span> result = _Instance[key];
    _Instance.Add(key, <span class="highlight-keyword">value</span>, <span class="highlight-keyword">null</span>, policy.AbsoluteExpiration.DateTime, policy.SlidingExpiration, System.Web.Caching.CacheItemPriority.Default, <span class="highlight-keyword">null</span>);
    <span class="highlight-keyword">return</span> result;
  }

  <span class="highlight-comment">// Добавляет запись в кэш, используя заданный экземпляр CacheItem и сведения о способе удаления записи.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> CacheItem AddOrGetExisting(CacheItem <span class="highlight-keyword">value</span>, CacheItemPolicy policy)
  {
    <span class="highlight-keyword">object</span> result = <span class="highlight-keyword">this</span>.AddOrGetExisting(<span class="highlight-keyword">value</span>.Key, <span class="highlight-keyword">value</span>.Value, policy, <span class="highlight-keyword">value</span>.RegionName);
    <span class="highlight-keyword">if</span> (result == <span class="highlight-keyword">null</span>) { <span class="highlight-keyword">return</span> <span class="highlight-keyword">null</span>; }
    <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> CacheItem(<span class="highlight-keyword">value</span>.Key, result, <span class="highlight-keyword">value</span>.RegionName);
  }

  <span class="highlight-comment">// Добавляет запись в кэш, используя заданную пару "ключ-значение" и абсолютное значение срока действия.  </span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">object</span> AddOrGetExisting(<span class="highlight-keyword">string</span> key, <span class="highlight-keyword">object</span> <span class="highlight-keyword">value</span>, DateTimeOffset absoluteExpiration, <span class="highlight-keyword">string</span> regionName = <span class="highlight-keyword">null</span>)
  {
    CacheItemPolicy policy = <span class="highlight-keyword">new</span> CacheItemPolicy();
    policy.AbsoluteExpiration = absoluteExpiration;
    <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.AddOrGetExisting(key, <span class="highlight-keyword">value</span>, policy, regionName);
  }

  <span class="highlight-comment">// Определяет, существует ли в кэше запись кэша.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">bool</span> Contains(<span class="highlight-keyword">string</span> key, <span class="highlight-keyword">string</span> regionName = <span class="highlight-keyword">null</span>)
  {
    <span class="highlight-keyword">return</span> _Instance[key] != <span class="highlight-keyword">null</span>;
  }

  <span class="highlight-comment">// При переопределении в производном классе создает объект CacheEntryChangeMonitor, который может активировать события в ответ на изменения указанных записей кэша.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(IEnumerable&lt;<span class="highlight-keyword">string</span>&gt; keys, <span class="highlight-keyword">string</span> regionName = <span class="highlight-keyword">null</span>)
  {
    <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> NotImplementedException();
  }

  <span class="highlight-comment">// Содержит описание функций, предоставляемых реализацией кэша.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> DefaultCacheCapabilities DefaultCacheCapabilities
  {
    <span class="highlight-keyword">get</span>
    {
      <span class="highlight-keyword">return</span> DefaultCacheCapabilities.AbsoluteExpirations | DefaultCacheCapabilities.SlidingExpirations;
    }
  }

  <span class="highlight-comment">// Получает из кэша указанную запись кэша в виде объекта.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">object</span> Get(<span class="highlight-keyword">string</span> key, <span class="highlight-keyword">string</span> regionName = <span class="highlight-keyword">null</span>)
  {
    <span class="highlight-keyword">return</span> _Instance.Get(key);
  }

  <span class="highlight-comment">// Получает из кэша указанную запись кэша в виде экземпляра CacheItem.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> CacheItem GetCacheItem(<span class="highlight-keyword">string</span> key, <span class="highlight-keyword">string</span> regionName = <span class="highlight-keyword">null</span>)
  {
    <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> CacheItem(key, <span class="highlight-keyword">this</span>.Get(key, regionName), regionName);
  }

  <span class="highlight-comment">// Получает общее число записей в кэше.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">long</span> GetCount(<span class="highlight-keyword">string</span> regionName = <span class="highlight-keyword">null</span>)
  {
    <span class="highlight-keyword">return</span> _Instance.Count;
  }

  <span class="highlight-comment">// Создает перечислитель, который может использоваться для перебора записей кэша в коллекции.</span> 
  <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> IEnumerator&lt;KeyValuePair&lt;<span class="highlight-keyword">string</span>, <span class="highlight-keyword">object</span>&gt;&gt; GetEnumerator()
  {
    List&lt;KeyValuePair&lt;<span class="highlight-keyword">string</span>, <span class="highlight-keyword">object</span>&gt;&gt; result = <span class="highlight-keyword">new</span> List&lt;KeyValuePair&lt;<span class="highlight-keyword">string</span>, <span class="highlight-keyword">object</span>&gt;&gt;();
    System.Collections.IDictionaryEnumerator em = _Instance.GetEnumerator();
    <span class="highlight-keyword">while</span> (em.MoveNext())
    {
      result.Add(<span class="highlight-keyword">new</span> KeyValuePair&lt;<span class="highlight-keyword">string</span>, <span class="highlight-keyword">object</span>&gt;(em.Key.ToString(), em.Value));
    }
    <span class="highlight-keyword">return</span> result.GetEnumerator();
  }

  <span class="highlight-comment">// Получает набор записей кэша, соответствующих указанным ключам.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> IDictionary&lt;<span class="highlight-keyword">string</span>, <span class="highlight-keyword">object</span>&gt; GetValues(IEnumerable&lt;<span class="highlight-keyword">string</span>&gt; keys, <span class="highlight-keyword">string</span> regionName = <span class="highlight-keyword">null</span>)
  {
    Dictionary&lt;<span class="highlight-keyword">string</span>, <span class="highlight-keyword">object</span>&gt; result = <span class="highlight-keyword">new</span> Dictionary&lt;<span class="highlight-keyword">string</span>, <span class="highlight-keyword">object</span>&gt;();
    <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">string</span> key <span class="highlight-keyword">in</span> keys)
    {
      result[key] = <span class="highlight-keyword">this</span>.Get(key, regionName);
    }
    <span class="highlight-keyword">return</span> result;
  }

  <span class="highlight-comment">// Имя экземпляра.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> Name
  {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"ASP .NET"</span>; }
  }

  <span class="highlight-comment">// Удаляет запись из кэша.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">object</span> Remove(<span class="highlight-keyword">string</span> key, <span class="highlight-keyword">string</span> regionName = <span class="highlight-keyword">null</span>)
  {
    <span class="highlight-keyword">return</span> _Instance.Remove(key);
  }

  <span class="highlight-comment">// Вставляет запись в кэш в виде экземпляра CacheItem и задает сведения о способе удаления записи.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> Set(<span class="highlight-keyword">string</span> key, <span class="highlight-keyword">object</span> <span class="highlight-keyword">value</span>, CacheItemPolicy policy, <span class="highlight-keyword">string</span> regionName = <span class="highlight-keyword">null</span>)
  {
    <span class="highlight-keyword">base</span>.Add(key, <span class="highlight-keyword">value</span>, policy, regionName);
  }

  <span class="highlight-comment">// Вставляет запись в кэш в виде экземпляра CacheItem и задает сведения о способе удаления записи.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> Set(CacheItem item, CacheItemPolicy policy)
  {
    <span class="highlight-keyword">base</span>.Add(item, policy);
  }

  <span class="highlight-comment">// Вставляет запись в кэш.</span> 
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> Set(<span class="highlight-keyword">string</span> key, <span class="highlight-keyword">object</span> <span class="highlight-keyword">value</span>, DateTimeOffset absoluteExpiration, <span class="highlight-keyword">string</span> regionName = <span class="highlight-keyword">null</span>)
  {
    <span class="highlight-keyword">base</span>.Add(key, <span class="highlight-keyword">value</span>, absoluteExpiration, regionName);
  }

  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">object</span> <span class="highlight-keyword">this</span>[<span class="highlight-keyword">string</span> key]
  {
    <span class="highlight-keyword">get</span>
    {
      <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.Get(key, <span class="highlight-keyword">null</span>);
    }
    <span class="highlight-keyword">set</span>
    {
      <span class="highlight-keyword">this</span>.Set(key, <span class="highlight-keyword">value</span>, <span class="highlight-keyword">this</span>.DefaultPolicy, <span class="highlight-keyword">null</span>);
    }
  }

}</pre></div><div id="ID0EACAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Runtime.Caching;
using System.Web;

public class MyCache : ObjectCache
{

  private System.Web.Caching.Cache _Instance = null;

  // Политика кэширования по умолчанию. 
  public CacheItemPolicy DefaultPolicy { get; set; }

  public WebCache()
  {
    if (HttpContext.Current != null)
    {
      _Instance = HttpContext.Current.Cache;
      this.DefaultPolicy = new CacheItemPolicy();
    }
    else
    {
      throw new Exception("HttpContext is requred.");
    }
  }

  public WebCache(HttpContext context)
  {
    _Instance = context.Cache;
    this.DefaultPolicy = new CacheItemPolicy();
  }

  // Вставляет запись в кэш, используя указанную пару "ключ-значение" и заданные сведения о методе ее удаления. 
  public override object AddOrGetExisting(string key, object value, CacheItemPolicy policy, string regionName = null)
  {
    object result = _Instance[key];
    _Instance.Add(key, value, null, policy.AbsoluteExpiration.DateTime, policy.SlidingExpiration, System.Web.Caching.CacheItemPriority.Default, null);
    return result;
  }

  // Добавляет запись в кэш, используя заданный экземпляр CacheItem и сведения о способе удаления записи. 
  public override CacheItem AddOrGetExisting(CacheItem value, CacheItemPolicy policy)
  {
    object result = this.AddOrGetExisting(value.Key, value.Value, policy, value.RegionName);
    if (result == null) { return null; }
    return new CacheItem(value.Key, result, value.RegionName);
  }

  // Добавляет запись в кэш, используя заданную пару "ключ-значение" и абсолютное значение срока действия.   
  public override object AddOrGetExisting(string key, object value, DateTimeOffset absoluteExpiration, string regionName = null)
  {
    CacheItemPolicy policy = new CacheItemPolicy();
    policy.AbsoluteExpiration = absoluteExpiration;
    return this.AddOrGetExisting(key, value, policy, regionName);
  }

  // Определяет, существует ли в кэше запись кэша. 
  public override bool Contains(string key, string regionName = null)
  {
    return _Instance[key] != null;
  }

  // При переопределении в производном классе создает объект CacheEntryChangeMonitor, который может активировать события в ответ на изменения указанных записей кэша. 
  public override CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(IEnumerable&lt;string&gt; keys, string regionName = null)
  {
    throw new NotImplementedException();
  }

  // Содержит описание функций, предоставляемых реализацией кэша. 
  public override DefaultCacheCapabilities DefaultCacheCapabilities
  {
    get
    {
      return DefaultCacheCapabilities.AbsoluteExpirations | DefaultCacheCapabilities.SlidingExpirations;
    }
  }

  // Получает из кэша указанную запись кэша в виде объекта. 
  public override object Get(string key, string regionName = null)
  {
    return _Instance.Get(key);
  }

  // Получает из кэша указанную запись кэша в виде экземпляра CacheItem. 
  public override CacheItem GetCacheItem(string key, string regionName = null)
  {
    return new CacheItem(key, this.Get(key, regionName), regionName);
  }

  // Получает общее число записей в кэше. 
  public override long GetCount(string regionName = null)
  {
    return _Instance.Count;
  }

  // Создает перечислитель, который может использоваться для перебора записей кэша в коллекции. 
  protected override IEnumerator&lt;KeyValuePair&lt;string, object&gt;&gt; GetEnumerator()
  {
    List&lt;KeyValuePair&lt;string, object&gt;&gt; result = new List&lt;KeyValuePair&lt;string, object&gt;&gt;();
    System.Collections.IDictionaryEnumerator em = _Instance.GetEnumerator();
    while (em.MoveNext())
    {
      result.Add(new KeyValuePair&lt;string, object&gt;(em.Key.ToString(), em.Value));
    }
    return result.GetEnumerator();
  }

  // Получает набор записей кэша, соответствующих указанным ключам. 
  public override IDictionary&lt;string, object&gt; GetValues(IEnumerable&lt;string&gt; keys, string regionName = null)
  {
    Dictionary&lt;string, object&gt; result = new Dictionary&lt;string, object&gt;();
    foreach (string key in keys)
    {
      result[key] = this.Get(key, regionName);
    }
    return result;
  }

  // Имя экземпляра. 
  public override string Name
  {
    get { return "ASP .NET"; }
  }

  // Удаляет запись из кэша. 
  public override object Remove(string key, string regionName = null)
  {
    return _Instance.Remove(key);
  }

  // Вставляет запись в кэш в виде экземпляра CacheItem и задает сведения о способе удаления записи. 
  public override void Set(string key, object value, CacheItemPolicy policy, string regionName = null)
  {
    base.Add(key, value, policy, regionName);
  }

  // Вставляет запись в кэш в виде экземпляра CacheItem и задает сведения о способе удаления записи. 
  public override void Set(CacheItem item, CacheItemPolicy policy)
  {
    base.Add(item, policy);
  }

  // Вставляет запись в кэш. 
  public override void Set(string key, object value, DateTimeOffset absoluteExpiration, string regionName = null)
  {
    base.Add(key, value, absoluteExpiration, regionName);
  }

  public override object this[string key]
  {
    get
    {
      return this.Get(key, null);
    }
    set
    {
      this.Set(key, value, this.DefaultPolicy, null);
    }
  }

}</pre></div><div id="ID0EACAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EACAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EACAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EACAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EACAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EACAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAAAA');</script><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">См. также</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="7f05f17d-32a3-a336-1b90-a70c54450331.htm" target="">SqlClient - класс</a></div><div class="seeAlsoStyle"><a href="7d3c05cd-1d1b-04d9-75d2-b3d6ad38a446.htm" target="">Nemiro.Data.Sql - пространство имён</a></div><div class="seeAlsoStyle"><a href="a3aabc0e-d339-1e83-db12-8058bb49923d.htm" target="">SqlClient<span id="ID0EBACAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBACAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>CacheDuration</a></div><div class="seeAlsoStyle"><a href="52a4a048-12eb-469c-f2e6-b9356a48e9ea.htm" target="">SqlClient<span id="ID0EBABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>CacheCustomArgs</a></div><div class="seeAlsoStyle"><a href="04eda964-2407-d070-9edc-9177e741c746.htm" target="">SqlClient<span id="ID0EBAAAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBAAAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>CacheType</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p><a href="https://github.com/alekseynemiro/nemiro.data.dll/wiki/License-for-Use-and-Distribution-(RU)" target="_blank">Copyright © Aleksey Nemiro, 2009-2014</a> </p><div class="OH_feedbacklink"><a href="mailto:aleksey@kbyte.ru?subject=Nemiro.Data.dll+SqlClient.CacheCustom+-+%d1%81%d0%b2%d0%be%d0%b9%d1%81%d1%82%d0%b2%d0%be+100+RU-RU&amp;body=%d0%92%d0%b0%d1%88%20%d0%be%d1%82%d0%b7%d1%8b%d0%b2%20%d0%b1%d1%83%d0%b4%d0%b5%d1%82%20%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d0%bd%20%d0%b4%d0%bb%d1%8f%20%d1%83%d0%bb%d1%83%d1%87%d1%88%d0%b5%d0%bd%d0%b8%d1%8f%20%d0%ba%d0%b0%d1%87%d0%b5%d1%81%d1%82%d0%b2%d0%b0%20%d0%b4%d0%be%d0%ba%d1%83%d0%bc%d0%b5%d0%bd%d1%82%d0%b0%d1%86%d0%b8%d0%b8%20%d0%b8%20%d0%bf%d1%80%d0%be%d0%b4%d1%83%d0%ba%d1%82%d0%b0%20%d0%b2%20%d1%86%d0%b5%d0%bb%d0%be%d0%bc.%20%d0%90%d0%b4%d1%80%d0%b5%d1%81%20%d0%b2%d0%b0%d1%88%d0%b5%d0%b9%20%d1%8d%d0%bb%d0%b5%d0%ba%d1%82%d1%80%d0%be%d0%bd%d0%bd%d0%be%d0%b9%20%d0%bf%d0%be%d1%87%d1%82%d1%8b%20%d0%bd%d0%b5%20%d0%b1%d1%83%d0%b4%d0%b5%d1%82%20%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d0%bd%20%d0%b4%d0%bb%d1%8f%20%d0%b4%d1%80%d1%83%d0%b3%d0%b8%d1%85%20%d1%86%d0%b5%d0%bb%d0%b5%d0%b9%20%d0%b8%20%d0%b1%d1%83%d0%b4%d0%b5%d1%82%20%d1%83%d0%b4%d0%b0%d0%bb%d1%91%d0%bd%2c%20%d0%bf%d0%be%d1%81%d0%bb%d0%b5%20%d1%82%d0%be%d0%b3%d0%be%20%d0%ba%d0%b0%d0%ba%20%d0%b2%d0%b0%d1%88%20%d0%be%d1%82%d0%b7%d1%8b%d0%b2%20%d0%b1%d1%83%d0%b4%d0%b5%d1%82%20%d0%be%d0%b1%d1%80%d0%b0%d0%b1%d0%be%d1%82%d0%b0%d0%bd.%20%d0%94%d0%be%20%d0%be%d0%ba%d0%be%d0%bd%d1%87%d0%b0%d0%bd%d0%b8%d1%8f%20%d1%80%d0%b0%d0%b1%d0%be%d1%82%20%d0%bf%d0%be%20%d0%be%d0%b1%d1%80%d0%b0%d0%b1%d0%be%d1%82%d0%ba%d0%b5%20%d0%b2%d0%b0%d1%88%d0%b5%d0%b3%d0%be%20%d0%be%d1%82%d0%b7%d1%8b%d0%b2%d0%b0%2c%20%d0%b2%d1%8b%20%d0%bc%d0%be%d0%b6%d0%b5%d1%82%d0%b5%20%d1%81%d0%b2%d1%8f%d0%b7%d0%b0%d1%82%d1%8c%d1%81%d1%8f%20%d1%81%20%d0%b0%d0%b2%d1%82%d0%be%d1%80%d0%be%d0%bc%20%d0%b4%d0%bb%d1%8f%20%d0%bf%d0%be%d0%bb%d1%83%d1%87%d0%b5%d0%bd%d0%b8%d1%8f%20%d0%b4%d0%be%d0%bf%d0%be%d0%bb%d0%bd%d0%b8%d1%82%d0%b5%d0%bb%d1%8c%d0%bd%d0%be%d0%b9%20%d0%b8%d0%bd%d1%84%d0%be%d1%80%d0%bc%d0%b0%d1%86%d0%b8%d0%b8.%20%d0%9f%d0%be%d1%81%d0%bb%d0%b5%20%d0%b5%d0%b3%d0%be%20%d0%be%d0%b1%d1%80%d0%b0%d0%b1%d0%be%d1%82%d0%ba%d0%b8%2c%20%d0%b2%d1%8b%20%d0%bc%d0%be%d0%b6%d0%b5%d1%82%d0%b5%20%d0%bf%d0%be%d0%bb%d1%83%d1%87%d0%b8%d1%82%d1%8c%20%d1%81%d0%be%d0%be%d0%b1%d1%89%d0%b5%d0%bd%d0%b8%d0%b5%20%d0%be%d0%b1%20%d0%be%d0%ba%d0%be%d0%bd%d1%87%d0%b0%d0%bd%d0%b8%d0%b8%20%d1%80%d0%b0%d0%b1%d0%be%d1%82%20%d0%bf%d0%be%20%d0%b2%d0%b0%d1%88%d0%b5%d0%bc%d1%83%20%d0%be%d1%82%d0%b7%d1%8b%d0%b2%d1%83%20%d0%bd%d0%b0%20%d1%83%d0%ba%d0%b0%d0%b7%d0%b0%d0%bd%d0%bd%d1%8b%d0%b9%20%d0%b0%d0%b4%d1%80%d0%b5%d1%81%20%d1%8d%d0%bb%d0%b5%d0%ba%d1%82%d1%80%d0%be%d0%bd%d0%bd%d0%be%d0%b9%20%d0%bf%d0%be%d1%87%d1%82%d1%8b.">Отправить отзыв</a> по этой теме в aleksey@kbyte.ru.</div></div></body></html>